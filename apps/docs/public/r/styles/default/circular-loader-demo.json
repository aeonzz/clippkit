{
  "name": "circular-loader-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/circular-loader-demo.tsx",
      "content": "import React from \"react\";\nimport { Player } from \"@remotion/player\";\n\nimport CircularLoader, {\n  CircularProgressProps,\n} from \"../components/circular-loader\";\n\n// This Composition component will pass props to the new CircularLoader\ninterface CircularLoaderCompositionProps {\n  loaderProps: CircularProgressProps; // Changed to avoid confusion with the old name\n}\n\nconst CircularLoaderComposition: React.FC<CircularLoaderCompositionProps> = ({\n  loaderProps,\n}) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <CircularLoader {...loaderProps} />\n    </div>\n  );\n};\n\nexport default function CircularLoaderDemo() {\n  const loaderPropsForDemo = React.useMemo<CircularProgressProps>(\n    () => ({\n      size: 250,\n      progressSource: \"time\",\n      durationInFrames: 120, // 4 seconds at 30fps\n      loopProgress: true,\n      // Track\n      showTrack: true,\n      trackColor: \"rgba(100, 100, 100, 0.3)\",\n      trackStrokeWidth: 10,\n      // Progress Arc\n      progressStrokeWidth: 12,\n      progressStrokeLinecap: \"round\",\n      progressColorMode: \"solid\",\n      progressSolidColor: \"var(--primary)\",\n      // Pulse\n      enablePulse: true,\n      pulseMagnitude: 0.03,\n      pulseSpeed: 0,\n      // Text\n      showPercentageText: true,\n      textColor: \"var(--primary)\",\n      textSize: \"3rem\",\n      textFontWeight: \"600\",\n    }),\n    []\n  );\n\n  const playerDurationInFrames = 120; // Match durationInFrames for a full cycle example\n\n  return (\n    <Player\n      component={CircularLoaderComposition}\n      inputProps={{ loaderProps: loaderPropsForDemo }} // Pass the new props object\n      durationInFrames={playerDurationInFrames}\n      compositionWidth={640}\n      compositionHeight={480} // Increased height for better viewing\n      fps={30}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      controls\n      loop\n    />\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}