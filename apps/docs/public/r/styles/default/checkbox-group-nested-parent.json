{
  "name": "checkbox-group-nested-parent",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/checkbox-group-nested-parent.tsx",
      "content": "import * as React from \"react\";\n\nimport { Checkbox } from \"@/registry/default/ui/checkbox\";\nimport { CheckboxGroup } from \"@/registry/default/ui/checkbox-group\";\nimport { Label } from \"@/registry/default/ui/label\";\n\nconst mainPermissions = [\n  {\n    label: \"View Dashboard\",\n    value: \"view-dashboard\",\n  },\n  {\n    label: \"Access Reports\",\n    value: \"access-reports\",\n  },\n  {\n    label: \"Manage Users\",\n    value: \"manage-users\",\n  },\n] as const;\n\nconst userManagementPermissions = [\n  {\n    label: \"Create User\",\n    value: \"create-user\",\n  },\n  {\n    label: \"Edit User\",\n    value: \"edit-user\",\n  },\n  {\n    label: \"Delete User\",\n    value: \"delete-user\",\n  },\n  {\n    label: \"assign Roles\",\n    value: \"assign-roles\",\n  },\n];\n\nexport default function CheckboxGroupNestedParent() {\n  const [mainValue, setMainValue] = React.useState<string[]>([\n    \"view-dashboard\",\n  ]);\n  const [managementValue, setManagementValue] = React.useState<string[]>([\n    \"create-user\",\n  ]);\n\n  return (\n    <CheckboxGroup\n      aria-labelledby=\"permissions\"\n      value={mainValue}\n      onValueChange={(value) => {\n        if (value.includes(\"manage-users\")) {\n          setManagementValue(userManagementPermissions.map((p) => p.value));\n        } else if (\n          managementValue.length === userManagementPermissions.length\n        ) {\n          setManagementValue([]);\n        }\n        setMainValue(value);\n      }}\n      allValues={mainPermissions.map((p) => p.value)}\n    >\n      <Label id=\"permissions\" className=\"flex items-center space-x-2\">\n        <Checkbox name=\"permissions\" parent />\n        User Permissions\n      </Label>\n      {mainPermissions\n        .filter((permission) => permission.value !== \"manage-users\")\n        .map((permission, i) => (\n          <Label\n            key={i}\n            id={permission.value}\n            className=\"flex items-center space-x-2\"\n          >\n            <Checkbox name={permission.value} />\n            {permission.label}\n          </Label>\n        ))}\n      <CheckboxGroup\n        aria-labelledby=\"manage-users\"\n        value={managementValue}\n        onValueChange={(value) => {\n          if (value.length === userManagementPermissions.length) {\n            setMainValue((prev) =>\n              Array.from(new Set([...prev, \"manage-users\"]))\n            );\n          } else {\n            setMainValue((prev) => prev.filter((v) => v !== \"manage-users\"));\n          }\n          setManagementValue(value);\n        }}\n        allValues={userManagementPermissions.map((p) => p.value)}\n      >\n        <Label id=\"mangage-users\" className=\"flex items-center space-x-2\">\n          <Checkbox name=\"mangage-users\" parent />\n          Manage Users\n        </Label>\n        {userManagementPermissions.map((permission, i) => (\n          <Label\n            key={i}\n            id={permission.value}\n            className=\"flex items-center space-x-2 capitalize\"\n          >\n            <Checkbox name={permission.value} />\n            {permission.label}\n          </Label>\n        ))}\n      </CheckboxGroup>\n    </CheckboxGroup>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}