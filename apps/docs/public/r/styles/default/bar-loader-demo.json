{
  "name": "bar-loader-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/bar-loader-demo.tsx",
      "content": "import React from \"react\";\nimport { Player } from \"@remotion/player\";\n\nimport BarLoader from \"../components/bar-loader\";\n\n// Define props for the new composition component\ninterface BarLoaderCompositionProps {\n  barLoaderProps: React.ComponentProps<typeof BarLoader>;\n}\n\n// New component combining BarLoader\nconst BarLoaderComposition: React.FC<BarLoaderCompositionProps> = ({\n  barLoaderProps,\n}) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <BarLoader {...barLoaderProps} />\n    </div>\n  );\n};\n\nexport default function BarLoaderDemo() {\n  const barLoaderProps = React.useMemo(\n    () => ({\n      loadingText: \"Loading...\",\n      barColor: \"var(--primary)\", // Green bar\n      textColor: \"var(--primary)\",\n      width: \"30%\",\n      height: \"20%\",\n      hideText: false, // Uncomment to hide the loading text\n      barBorderRadius: 4, // Example: 4px border radius for the bar\n      trackColor: \"var(--muted)\", // Example: Darker track color\n      barHeight: \"10px\", // Example: 20px bar height\n    }),\n    []\n  );\n\n  const playerDurationInFrames = 150; // 5 seconds at 30fps\n\n  return (\n    <Player\n      component={BarLoaderComposition}\n      inputProps={{ barLoaderProps }}\n      durationInFrames={playerDurationInFrames}\n      compositionWidth={640}\n      compositionHeight={360}\n      fps={30}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"transparent\",\n      }}\n      controls\n      loop\n    />\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}