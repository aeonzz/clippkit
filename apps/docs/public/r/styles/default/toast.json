{
  "name": "toast",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "registryDependencies": [
    "https://clippkit.com/r/button"
  ],
  "files": [
    {
      "path": "ui/toast.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Toast as ToastPrimitive } from \"@base-ui-components/react/toast\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport {\n  CircleAlert,\n  CircleCheck,\n  CircleHelp,\n  Loader,\n  TriangleAlert,\n  XIcon,\n} from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\n\nconst toastVariants = cva(\n  \"group absolute z-[calc(1000-var(--toast-index))] mr-0 grid w-full [transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-swipe-movement-y)+calc(var(--toast-index)*var(--translate-y))))_scale(calc(1-(var(--toast-index)*0.07)))] grid-cols-1 rounded-lg border px-3.5 py-4 shadow-lg transition-all [transition-property:opacity,transform,bottom,top] duration-450 ease-out select-none after:absolute after:bottom-full after:left-0 after:h-[calc(1rem+1px)] after:w-full after:content-[''] has-data-[slot=toast-action]:grid-cols-[1fr_auto] data-[ending-style]:opacity-0 data-[expanded]:[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-offset-y)*var(--invert)+calc(var(--toast-index)*1rem*var(--invert))+var(--toast-swipe-movement-y)))] data-[starting-style]:[transform:translateY(var(--starting-style))] data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[ending-style]:[&:not([data-limited])]:[transform:translateY(150%)] [&>*]:transition-opacity [&>*]:duration-450 [&>*]:ease-out not-data-[expanded]:[&>*]:opacity-[calc(1-var(--toast-index))]\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground border-border\",\n        loading: \"bg-background text-foreground border-border\",\n        success:\n          \"data-[rich-colors=true]:border-green-200 data-[rich-colors=true]:bg-green-100 data-[rich-colors=true]:text-green-800 dark:data-[rich-colors=true]:border-green-900/40 dark:data-[rich-colors=true]:bg-green-950 dark:data-[rich-colors=true]:text-green-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-green-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-green-950\",\n        error:\n          \"data-[rich-colors=true]:border-red-200 data-[rich-colors=true]:bg-red-100 data-[rich-colors=true]:text-red-800 dark:data-[rich-colors=true]:border-red-900/40 dark:data-[rich-colors=true]:bg-red-950 dark:data-[rich-colors=true]:text-red-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-red-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-red-950\",\n        warning:\n          \"data-[rich-colors=true]:border-amber-200 data-[rich-colors=true]:bg-amber-100 data-[rich-colors=true]:text-amber-800 dark:data-[rich-colors=true]:border-amber-900/40 dark:data-[rich-colors=true]:bg-amber-950 dark:data-[rich-colors=true]:text-amber-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-amber-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-amber-950\",\n        info: \"data-[rich-colors=true]:border-blue-200 data-[rich-colors=true]:bg-blue-100 data-[rich-colors=true]:text-blue-800 dark:data-[rich-colors=true]:border-blue-900/40 dark:data-[rich-colors=true]:bg-blue-950 dark:data-[rich-colors=true]:text-blue-300 data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-blue-100 dark:data-[rich-colors=true]:[&_[data-slot=toast-close]]:bg-blue-950\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport type ToastVariants = VariantProps<typeof toastVariants>;\n\nexport type ToastType = \"loading\" | \"success\" | \"error\" | \"warning\" | \"info\";\n\ntype Position =\n  | \"top-center\"\n  | \"top-right\"\n  | \"top-left\"\n  | \"bottom-center\"\n  | \"bottom-right\"\n  | \"bottom-left\";\n\nconst toastManager = ToastPrimitive.createToastManager();\n\nconst useToastManager = ToastPrimitive.useToastManager;\n\ninterface ToastProviderProps\n  extends React.ComponentProps<typeof ToastPrimitive.Provider> {\n  position?: Position;\n  richColors?: boolean;\n  closeButton?: boolean;\n}\n\nfunction ToastProvider({\n  position = \"bottom-right\",\n  closeButton = false,\n  richColors = false,\n  children,\n  ...props\n}: ToastProviderProps) {\n  return (\n    <ToastPrimitive.Provider data-slot=\"toast-provider\" {...props}>\n      {children}\n      <ToastPrimitive.Viewport\n        data-slot=\"toast-viewport\"\n        data-position={position}\n        className=\"fixed z-50 w-[calc(100%-32px)] data-[position=bottom-center]:bottom-4 data-[position=bottom-center]:left-1/2 data-[position=bottom-center]:-translate-x-1/2 data-[position=bottom-left]:bottom-4 data-[position=bottom-left]:left-4 data-[position=bottom-right]:right-4 data-[position=bottom-right]:bottom-4 data-[position=top-center]:top-4 data-[position=top-center]:left-1/2 data-[position=top-center]:-translate-x-1/2 data-[position=top-left]:top-4 data-[position=top-left]:left-4 data-[position=top-right]:top-4 data-[position=top-right]:right-4 sm:w-full sm:max-w-[370px] sm:data-[position=bottom-center]:bottom-8 sm:data-[position=bottom-left]:bottom-8 sm:data-[position=bottom-left]:left-8 sm:data-[position=bottom-right]:right-8 sm:data-[position=bottom-right]:bottom-8 sm:data-[position=top-center]:top-8 sm:data-[position=top-left]:top-8 sm:data-[position=top-left]:left-8 sm:data-[position=top-right]:top-8 sm:data-[position=top-right]:right-8\"\n      >\n        <ToastLists\n          position={position}\n          closeButton={closeButton}\n          richColors={richColors}\n        />\n      </ToastPrimitive.Viewport>\n    </ToastPrimitive.Provider>\n  );\n}\n\ninterface ToastListsProps {\n  position: Position;\n  richColors: boolean;\n  closeButton?: boolean;\n}\n\nfunction ToastLists({ position, richColors, closeButton }: ToastListsProps) {\n  const { toasts } = useToastManager();\n\n  const swipeDirectionMap: Record<\n    Position,\n    NonNullable<ToastPrimitive.Root.Props[\"swipeDirection\"]>\n  > = {\n    \"bottom-center\": \"down\",\n    \"bottom-left\": [\"down\", \"left\"],\n    \"bottom-right\": [\"down\", \"right\"],\n    \"top-center\": \"up\",\n    \"top-left\": [\"up\", \"left\"],\n    \"top-right\": [\"up\", \"right\"],\n  };\n\n  const swipeDirection = swipeDirectionMap[position] ?? [\"down\", \"right\"];\n\n  const icons: Record<ToastType, React.ReactNode> = {\n    loading: <Loader className=\"animate-spin\" />,\n    success: <CircleCheck />,\n    error: <CircleAlert />,\n    warning: <TriangleAlert />,\n    info: <CircleHelp />,\n  };\n\n  return toasts.map((toast, i) => (\n    <ToastPrimitive.Root\n      key={toast.id}\n      data-slot=\"toast\"\n      data-rich-colors={richColors}\n      toast={toast}\n      swipeDirection={swipeDirection}\n      className={cn(\n        toastVariants({ variant: toast.type as ToastVariants[\"variant\"] }),\n        position.startsWith(\"bottom\")\n          ? \"bottom-0 data-[expanded]:bottom-2.5\"\n          : \"top-0 data-[expanded]:top-2.5\"\n      )}\n      style={{\n        [\"--gap\" as string]: \"1rem\",\n        [\"--translate-y\" as string]: position.startsWith(\"bottom\")\n          ? \"-15px\"\n          : \"15px\",\n        [\"--starting-style\" as string]: position.startsWith(\"bottom\")\n          ? \"150%\"\n          : \"-150%\",\n        [\"--invert\" as string]: position.startsWith(\"bottom\") ? \"-1\" : \"1\",\n        [\"--offset-y\" as string]:\n          \"calc(var(--toast-offset-y) * -1 + (var(--toast-index) * 1rem * -1) + var(--toast-swipe-movement-y))\",\n      }}\n    >\n      {closeButton && (\n        <ToastPrimitive.Close\n          data-slot=\"toast-close\"\n          className={cn(\n            \"ring-offset-background focus:ring-ring bg-background absolute -top-2 -left-2 rounded-full border p-[2px] opacity-70 transition-opacity hover:opacity-100 focus:ring-1 focus:ring-offset-1 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-[14px]\",\n            {\n              \"opacity-0 transition-opacity duration-300 ease-out group-data-[expanded]:opacity-100\":\n                i > 0,\n            }\n          )}\n          aria-label=\"Close\"\n        >\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </ToastPrimitive.Close>\n      )}\n      <div className=\"flex items-center space-x-2.5 [&>svg]:size-4.5 [&>svg]:shrink-0\">\n        {toast.type && toast.type ? icons[toast.type as ToastType] : null}\n        <div className=\"flex flex-col\">\n          <ToastPrimitive.Title\n            data-slot=\"toast-title\"\n            className=\"text-sm font-medium tracking-tight\"\n          />\n          <ToastPrimitive.Description\n            data-slot=\"toast-description\"\n            className=\"text-muted-foreground text-sm font-normal\"\n          />\n        </div>\n      </div>\n      <div className=\"flex items-center justify-between\">\n        <ToastPrimitive.Action\n          data-slot=\"toast-action\"\n          render={<Button size=\"sm\" />}\n        />\n      </div>\n    </ToastPrimitive.Root>\n  ));\n}\n\nexport { ToastProvider, useToastManager, toastManager };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}