{
  "name": "circular-waveform-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/circular-waveform-demo.tsx",
      "content": "import React from \"react\"; // Import React\r\nimport { MediaUtilsAudioData, useAudioData } from \"@remotion/media-utils\";\r\nimport { Player } from \"@remotion/player\";\r\nimport { Audio } from \"remotion\"; // Import Audio\r\n\r\nimport CircularWaveform from \"../components/circular-waveform\";\r\n\r\n// Media source for the demo\r\nconst MEDIA_SRC =\r\n  \"https://rwxrdxvxndclnqvznxfj.supabase.co/storage/v1/object/public/sounds//moon-landing.mp3\";\r\n\r\n// Define props for the new composition component\r\ninterface AudioCircularWaveformCompositionProps {\r\n  circularWaveformProps: Omit<\r\n    React.ComponentProps<typeof CircularWaveform>,\r\n    \"audioData\"\r\n  > & { audioData?: MediaUtilsAudioData | null };\r\n  mediaSrc: string;\r\n}\r\n\r\n// New component combining CircularWaveform and Audio\r\nconst AudioCircularWaveformComposition: React.FC<\r\n  AudioCircularWaveformCompositionProps\r\n> = ({ circularWaveformProps, mediaSrc }) => {\r\n  return (\r\n    <>\r\n      <CircularWaveform {...circularWaveformProps} />\r\n      <Audio src={mediaSrc} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function CircularWaveformDemo() {\r\n  const audioData = useAudioData(MEDIA_SRC);\r\n\r\n  const circularWaveformProps = React.useMemo(\r\n    () => ({\r\n      barCount: 180,\r\n      barWidth: 2,\r\n      waveAmplitude: 100,\r\n      radius: 80,\r\n      audioData,\r\n      strokeLinecap: \"round\" as const,\r\n      barMinHeight: 2,\r\n      transitionDuration: \"0.1s\",\r\n      transitionTimingFunction: \"ease-in-out\",\r\n      rotationOffset: 45,\r\n      barColor: \"var(--foreground)\",\r\n      growOutwardsOnly: true,\r\n    }),\r\n    [audioData]\r\n  );\r\n\r\n  // Calculate duration in frames for the player for better readability\r\n  const playerDurationInFrames = audioData\r\n    ? Math.floor(audioData.durationInSeconds * 30)\r\n    : 300;\r\n\r\n  return (\r\n    <Player\r\n      component={AudioCircularWaveformComposition} // Use the new component\r\n      inputProps={{ circularWaveformProps, mediaSrc: MEDIA_SRC }} // Pass props directly\r\n      durationInFrames={playerDurationInFrames} // e.g., 10 seconds at 30fps\r\n      compositionWidth={640}\r\n      compositionHeight={360} // 16:9 aspect ratio\r\n      fps={30}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\", // Player will scale to fit its container\r\n        backgroundColor: \"transparent\",\r\n      }}\r\n      controls // Show player controls\r\n      loop\r\n    />\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}