{
  "name": "typing-text",
  "type": "registry:component",
  "dependencies": [
    "remotion"
  ],
  "files": [
    {
      "path": "components/typing-text.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { interpolate, useCurrentFrame } from \"remotion\";\n\ninterface TypingTextProps {\n  text?: string;\n  textColor?: string;\n  cursorColor?: string;\n  fontSize?: string;\n  fontFamily?: string;\n  fontWeight?: string;\n  durationInFramesToType?: number; // Total frames to type out the entire text\n  cursorBlinkSpeed?: number; // Frames for one blink cycle (e.g., 15 means it blinks every 15 frames)\n}\n\nexport default function TypingText({\n  text = \"TYPE ME...\",\n  textColor = \"white\",\n  cursorColor = \"white\",\n  fontSize = \"3rem\",\n  fontFamily = \"'Courier New', monospace\",\n  fontWeight = \"bold\",\n  durationInFramesToType, // If not provided, defaults to text.length * 5 frames\n  cursorBlinkSpeed = 15,\n}: TypingTextProps) {\n  const frame = useCurrentFrame();\n\n  const actualDurationInFramesToType =\n    durationInFramesToType !== undefined\n      ? durationInFramesToType\n      : text.length * 5; // Default: 5 frames per character\n\n  const visibleCharacters = Math.floor(\n    interpolate(frame, [0, actualDurationInFramesToType], [0, text.length], {\n      extrapolateRight: \"clamp\",\n    })\n  );\n\n  const charactersToRender = text.slice(0, visibleCharacters).split(\"\");\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"90%\", // Ensure it doesn't overflow easily\n        textAlign: \"center\",\n        padding: \"1rem\", // Add some padding\n      }}\n    >\n      <span\n        style={{\n          fontFamily,\n          fontSize,\n          fontWeight,\n          color: textColor,\n          display: \"inline-block\", // To keep cursor on the same line\n        }}\n      >\n        {charactersToRender.map((char, index) => (\n          <React.Fragment key={index}>\n            {char === \" \" ? \"\\u00A0\" : char}\n          </React.Fragment>\n        ))}\n      </span>\n      <span\n        style={{\n          display: \"inline-block\",\n          fontFamily,\n          fontSize,\n          fontWeight,\n          color: cursorColor,\n          opacity: frame % cursorBlinkSpeed < cursorBlinkSpeed / 2 ? 1 : 0,\n          marginLeft: \"0.2rem\", // Space between text and cursor\n          verticalAlign: \"middle\",\n        }}\n      >\n        â–Œ\n      </span>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}