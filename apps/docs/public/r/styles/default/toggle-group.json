{
  "name": "toggle-group",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "ui/toggle-group.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { ToggleGroup as ToggleGroupRoot } from \"@base-ui-components/react/toggle-group\";\nimport { type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Toggle, toggleVariants } from \"@/registry/default/ui/toggle\";\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n});\n\nfunction ToggleGroup({\n  className,\n  size,\n  variant,\n  children,\n  ...props\n}: React.ComponentProps<typeof ToggleGroupRoot> &\n  VariantProps<typeof toggleVariants>) {\n  const contextValue = React.useMemo(\n    () => ({\n      size: size ?? \"default\",\n      variant: variant ?? \"default\",\n    }),\n    [size, variant]\n  );\n\n  return (\n    <ToggleGroupRoot\n      data-slot=\"toggle-group\"\n      className={cn(\n        \"flex items-center justify-center gap-1 data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <ToggleGroupContext.Provider value={contextValue}>\n        {children}\n      </ToggleGroupContext.Provider>\n    </ToggleGroupRoot>\n  );\n}\n\nfunction ToggleGroupItem({\n  className,\n  variant,\n  size,\n  children,\n  ...props\n}: React.ComponentProps<typeof Toggle>) {\n  const context = React.useContext(ToggleGroupContext);\n  return (\n    <Toggle\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Toggle>\n  );\n}\n\nexport { ToggleGroup, ToggleGroupItem };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/toggle.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Toggle as ToggleRoot } from \"@base-ui-components/react/toggle\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[pressed]:bg-accent data-[pressed]:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-9 px-2 min-w-9 [&_svg]:size-4\",\n        sm: \"h-8 px-1.5 min-w-8 [&_svg]:size-3.5\",\n        lg: \"h-10 px-2.5 min-w-10 [&_svg]:size-4.5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport type ButtonVariants = VariantProps<typeof toggleVariants>;\n\nfunction Toggle({\n  className,\n  variant,\n  size,\n  ...props\n}: React.ComponentProps<typeof ToggleRoot> & ButtonVariants) {\n  return (\n    <ToggleRoot\n      data-slot=\"toggle\"\n      className={cn(toggleVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Toggle, toggleVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}