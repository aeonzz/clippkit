{
  "name": "linear-waveform-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/linear-waveform-demo.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { MediaUtilsAudioData, useAudioData } from \"@remotion/media-utils\";\nimport { Player } from \"@remotion/player\";\nimport { Audio } from \"remotion\"; // Import Audio\n\nimport LinearWaveform from \"../components/linear-waveform\";\n\n// Media source for the demo\nconst MEDIA_SRC =\n  \"https://rwxrdxvxndclnqvznxfj.supabase.co/storage/v1/object/public/sounds//moon-landing.mp3\";\n\n// Define props for the new composition component\ninterface AudioWaveformCompositionProps {\n  linearWaveformProps: Omit<\n    React.ComponentProps<typeof LinearWaveform>,\n    \"audioData\"\n  > & { audioData?: MediaUtilsAudioData | null };\n  mediaSrc: string;\n}\n\n// New component combining LinearWaveform and Audio\nconst AudioWaveformComposition: React.FC<AudioWaveformCompositionProps> = ({\n  linearWaveformProps,\n  mediaSrc,\n}) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <LinearWaveform {...linearWaveformProps} />\n      <Audio src={mediaSrc} />\n    </div>\n  );\n};\n\nexport default function LinearWaveformDemo() {\n  const audioData = useAudioData(MEDIA_SRC);\n\n  const linearWaveformProps = React.useMemo(\n    () => ({\n      numberOfSamples: 108,\n      strokeColor: \"var(--foreground)\",\n      strokeWidth: 2,\n      fillColor: \"none\",\n      waveAmplitude: 100,\n      waveSpeed: 3,\n      audioData,\n      width: \"50%\",\n    }),\n    [audioData]\n  );\n\n  // Calculate duration in frames for the player for better readability\n  const playerDurationInFrames = audioData\n    ? Math.floor(audioData.durationInSeconds * 30)\n    : 300;\n\n  console.log(\"audioData\", audioData);\n  return (\n    <Player\n      component={AudioWaveformComposition} // Use the new component\n      inputProps={{ linearWaveformProps, mediaSrc: MEDIA_SRC }} // Pass props directly for AudioWaveformComposition\n      durationInFrames={playerDurationInFrames} // Use the pre-calculated duration\n      compositionWidth={640}\n      compositionHeight={360}\n      fps={30}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"transparent\",\n      }}\n      controls\n      loop\n    />\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}