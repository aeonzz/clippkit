{
  "name": "linear-waveform-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/linear-waveform-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { MediaUtilsAudioData, useAudioData } from \"@remotion/media-utils\";\r\nimport { Player } from \"@remotion/player\";\r\nimport { Audio } from \"remotion\"; // Import Audio\r\n\r\nimport LinearWaveform from \"../components/linear-waveform\";\r\n\r\n// Media source for the demo\r\nconst MEDIA_SRC =\r\n  \"https://rwxrdxvxndclnqvznxfj.supabase.co/storage/v1/object/public/sounds//moon-landing.mp3\";\r\n\r\n// Define props for the new composition component\r\ninterface AudioWaveformCompositionProps {\r\n  linearWaveformProps: Omit<\r\n    React.ComponentProps<typeof LinearWaveform>,\r\n    \"audioData\"\r\n  > & { audioData?: MediaUtilsAudioData | null };\r\n  mediaSrc: string;\r\n}\r\n\r\n// New component combining LinearWaveform and Audio\r\nconst AudioWaveformComposition: React.FC<AudioWaveformCompositionProps> = ({\r\n  linearWaveformProps,\r\n  mediaSrc,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <LinearWaveform {...linearWaveformProps} />\r\n      <Audio src={mediaSrc} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function LinearWaveformDemo() {\r\n  const audioData = useAudioData(MEDIA_SRC);\r\n\r\n  const linearWaveformProps = React.useMemo(\r\n    () => ({\r\n      numberOfSamples: 108,\r\n      strokeColor: \"var(--foreground)\",\r\n      strokeWidth: 2,\r\n      fillColor: \"none\",\r\n      waveAmplitude: 100,\r\n      waveSpeed: 3,\r\n      audioData,\r\n      width: \"50%\",\r\n    }),\r\n    [audioData]\r\n  );\r\n\r\n  // Calculate duration in frames for the player for better readability\r\n  const playerDurationInFrames = audioData\r\n    ? Math.floor(audioData.durationInSeconds * 30)\r\n    : 300;\r\n\r\n  console.log(\"audioData\", audioData);\r\n  return (\r\n    <Player\r\n      component={AudioWaveformComposition} // Use the new component\r\n      inputProps={{ linearWaveformProps, mediaSrc: MEDIA_SRC }} // Pass props directly for AudioWaveformComposition\r\n      durationInFrames={playerDurationInFrames} // Use the pre-calculated duration\r\n      compositionWidth={640}\r\n      compositionHeight={360}\r\n      fps={30}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: \"transparent\",\r\n      }}\r\n      controls\r\n      loop\r\n    />\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}