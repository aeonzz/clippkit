{
  "name": "screen-loader-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/screen-loader-demo.tsx",
      "content": "import React from \"react\";\nimport { Player } from \"@remotion/player\";\n\nimport ScreenLoader, { ScreenLoaderProps } from \"../ui/screen-loader\";\n\n// This Composition component will pass props to the ScreenLoader\ninterface ScreenLoaderCompositionProps {\n  loaderProps: ScreenLoaderProps;\n}\n\nconst ScreenLoaderComposition: React.FC<ScreenLoaderCompositionProps> = ({\n  loaderProps,\n}) => {\n  // Define a container for the loader to move within\n  // This container needs explicit dimensions and position: relative\n  const containerStyle: React.CSSProperties = {\n    width: loaderProps.containerWidth, // Use props for dynamic sizing\n    height: loaderProps.containerHeight,\n    border: \"2px dashed #ccc\", // Optional: to visualize the container\n    position: \"relative\", // Crucial for the loader's absolute positioning\n    margin: \"auto\", // Center the container on the page for the demo\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#f0f0f0\", // A light background for the demo\n      }}\n    >\n      <div style={containerStyle}>\n        <ScreenLoader {...loaderProps} />\n      </div>\n    </div>\n  );\n};\n\nexport default function ScreenLoaderDemo() {\n  const demoContainerWidth = 300;\n  const demoContainerHeight = 200;\n\n  const loaderPropsForDemo = React.useMemo<ScreenLoaderProps>(\n    () => ({\n      loaderSize: 25,\n      loaderColor: \"#FF6347\", // Tomato color\n      containerWidth: demoContainerWidth,\n      containerHeight: demoContainerHeight,\n      durationInFrames: 150, // 5 seconds at 30fps\n      loop: true,\n    }),\n    [demoContainerWidth, demoContainerHeight] // Dependencies\n  );\n\n  return (\n    <Player\n      component={ScreenLoaderComposition}\n      inputProps={{ loaderProps: loaderPropsForDemo }}\n      durationInFrames={150} // Match loader's duration for a full loop demo\n      compositionWidth={demoContainerWidth + 100} // Player slightly larger than container\n      compositionHeight={demoContainerHeight + 100}\n      fps={30}\n      style={{\n        width: \"100%\",\n        height: \"400px\", // Fixed height for the player in the docs\n      }}\n      controls\n      loop\n    />\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}