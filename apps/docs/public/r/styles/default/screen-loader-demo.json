{
  "name": "screen-loader-demo",
  "type": "registry:example",
  "files": [
    {
      "path": "examples/screen-loader-demo.tsx",
      "content": "import React from \"react\";\r\nimport { Player } from \"@remotion/player\";\r\n\r\nimport ScreenLoader, { ScreenLoaderProps } from \"../components/screen-loader\";\r\n\r\n// ScreenLoaderComposition component removed\r\n\r\nexport default function ScreenLoaderDemo() {\r\n  const demoContainerWidth = 300;\r\n  const demoContainerHeight = 200;\r\n  const playerCompositionWidth = demoContainerWidth + 100;\r\n  const playerCompositionHeight = demoContainerHeight + 100;\r\n\r\n  const loaderPropsForDemo = React.useMemo<ScreenLoaderProps>(\r\n    () => ({\r\n      loaderSize: 15,\r\n      loaderColor: \"var(--primary)\",\r\n      containerWidth: playerCompositionWidth,\r\n      containerHeight: playerCompositionHeight,\r\n      durationInFrames: 150,\r\n      loop: true,\r\n      variant: \"double\",\r\n    }),\r\n    [playerCompositionWidth, playerCompositionHeight]\r\n  );\r\n\r\n  return (\r\n    <Player\r\n      component={ScreenLoader as any} // Use ScreenLoader directly, assert type to any\r\n      inputProps={loaderPropsForDemo as any} // Pass loaderPropsForDemo as inputProps, assert type to any\r\n      durationInFrames={150}\r\n      compositionWidth={playerCompositionWidth}\r\n      compositionHeight={playerCompositionHeight}\r\n      fps={30}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n      controls\r\n      loop\r\n    />\r\n  );\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}