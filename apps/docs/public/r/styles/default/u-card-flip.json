{
  "name": "u-card-flip",
  "type": "registry:block",
  "description": "",
  "files": [
    {
      "path": "blocks/card-flip/page.tsx",
      "content": "\"use client\";\r\n\r\nimport { Player } from \"@remotion/player\";\r\n\r\nimport CardFlip from \"@/registry/default/components/card-flip\"; // Adjust path as necessary\r\n\r\nexport default function CardFlipDemo() {\r\n  const cardFlipProps = {\r\n    frontText: \"Clippkit\",\r\n    backText: \"Card Flip?\",\r\n    frontTextColor: \"var(--foreground)\",\r\n    backTextColor: \"var(--foreground)\",\r\n    frontBackgroundColor: \"var(--card)\",\r\n    backBackgroundColor: \"var(--card)\",\r\n    fontSize: \"1.3rem\",\r\n    width: \"220px\",\r\n    height: \"300px\",\r\n    borderRadius: \"18px\",\r\n    borderColor: \"var(--primary)\",\r\n    borderWidth: \"1px\",\r\n    borderStyle: \"solid\" as const,\r\n    durationInFrames: 80,\r\n    damping: 18,\r\n    mass: 0.6,\r\n    stiffness: 90,\r\n  };\r\n\r\n  return (\r\n    <div className=\"aspect-video h-[180px] sm:h-[350px] md:h-[400px]\">\r\n      <Player\r\n        component={CardFlip}\r\n        inputProps={cardFlipProps}\r\n        durationInFrames={120}\r\n        compositionWidth={480}\r\n        compositionHeight={400}\r\n        fps={30}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundColor: \"transparent\",\r\n        }}\r\n        autoPlay\r\n        controls\r\n        loop\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:page",
      "target": "app/main.tsx"
    },
    {
      "path": "components/card-flip.tsx",
      "content": "\"use client\";\r\n\r\nimport { spring, useCurrentFrame, useVideoConfig } from \"remotion\";\r\n\r\ninterface CardFlipProps {\r\n  frontText?: string;\r\n  backText?: string;\r\n  frontTextColor?: string;\r\n  backTextColor?: string;\r\n  frontBackgroundColor?: string;\r\n  backBackgroundColor?: string;\r\n  fontSize?: string;\r\n  width?: string;\r\n  height?: string;\r\n  borderRadius?: string;\r\n  borderColor?: string;\r\n  borderWidth?: string;\r\n  borderStyle?: \"solid\" | \"dashed\" | \"dotted\";\r\n  durationInFrames?: number;\r\n  damping?: number;\r\n  mass?: number;\r\n  stiffness?: number;\r\n  boxShadow?: string;\r\n}\r\n\r\nexport default function CardFlip({\r\n  frontText = \"Clippk.it\",\r\n  backText = \"Remotion\",\r\n  frontTextColor = \"var(--card-foreground)\",\r\n  backTextColor = \"var(--card-foreground)\",\r\n  frontBackgroundColor = \"var(--muted)\",\r\n  backBackgroundColor = \"var(--card)\",\r\n  fontSize = \"1.25rem\",\r\n  width = \"200px\",\r\n  height = \"280px\",\r\n  borderRadius = \"15px\",\r\n  borderColor = \"var(--ring)\",\r\n  borderWidth = \"1px\",\r\n  borderStyle = \"solid\",\r\n  durationInFrames = 70,\r\n  damping = 18,\r\n  mass = 0.5,\r\n  stiffness = 100,\r\n  boxShadow = `0 1px 3px var(--border), 0 6px 12px oklch(from var(--border) calc(l - 0.1) c h / 30%)`,\r\n}: CardFlipProps) {\r\n  const frame = useCurrentFrame();\r\n  const { fps } = useVideoConfig();\r\n\r\n  const rotation = spring({\r\n    frame,\r\n    fps,\r\n    from: 0,\r\n    to: 360,\r\n    durationInFrames,\r\n    config: {\r\n      damping,\r\n      mass,\r\n      stiffness,\r\n    },\r\n  });\r\n\r\n  const commonFaceStyle: React.CSSProperties = {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backfaceVisibility: \"hidden\",\r\n    borderRadius,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize,\r\n    fontWeight: \"bold\",\r\n    padding: \"10px\",\r\n    boxSizing: \"border-box\",\r\n    borderWidth,\r\n    borderStyle,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        perspective: \"1200px\",\r\n        perspectiveOrigin: \"50% 50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width,\r\n          height,\r\n          transform: `rotateY(${rotation}deg)`,\r\n          transformStyle: \"preserve-3d\",\r\n          position: \"relative\",\r\n          boxShadow,\r\n          borderRadius,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            ...commonFaceStyle,\r\n            background: frontBackgroundColor,\r\n            color: frontTextColor,\r\n            borderColor: borderColor,\r\n          }}\r\n        >\r\n          {frontText}\r\n        </div>\r\n        <div\r\n          style={{\r\n            ...commonFaceStyle,\r\n            background: backBackgroundColor,\r\n            color: backTextColor,\r\n            borderColor: borderColor,\r\n            transform: \"rotateY(180deg)\",\r\n          }}\r\n        >\r\n          {backText}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "meta": {
    "iframeHeight": "600px",
    "container": "w-full bg-surface min-h-svh flex px-6 py-12 items-center md:pt-20 justify-center min-w-0 xl:py-24",
    "mobile": "component"
  }
}