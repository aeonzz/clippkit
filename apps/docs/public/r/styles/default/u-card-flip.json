{
  "name": "u-card-flip",
  "type": "registry:block",
  "description": "",
  "files": [
    {
      "path": "blocks/card-flip/page.tsx",
      "content": "\"use client\";\r\n\r\nimport { Player } from \"@remotion/player\";\r\n\r\nimport CardFlip from \"@/registry/default/components/card-flip\"; // Adjust path as necessary\r\n\r\nexport default function CardFlipDemo() {\r\n  const cardFlipProps = {\r\n    frontText: \"Clippkit\",\r\n    backText: \"Card Flip?\",\r\n    frontTextColor: \"var(--foreground)\",\r\n    backTextColor: \"var(--foreground)\",\r\n    frontBackgroundColor: \"var(--card)\",\r\n    backBackgroundColor: \"var(--card)\",\r\n    fontSize: \"1.3rem\",\r\n    width: \"220px\",\r\n    height: \"300px\",\r\n    borderRadius: \"18px\",\r\n    borderColor: \"var(--primary)\",\r\n    borderWidth: \"1px\",\r\n    borderStyle: \"solid\" as const,\r\n    durationInFrames: 80,\r\n    damping: 18,\r\n    mass: 0.6,\r\n    stiffness: 90,\r\n  };\r\n\r\n  return (\r\n    <div className=\"aspect-video h-[180px] sm:h-[350px] md:h-[400px]\">\r\n      <Player\r\n        component={CardFlip}\r\n        inputProps={cardFlipProps}\r\n        durationInFrames={120}\r\n        compositionWidth={480}\r\n        compositionHeight={400}\r\n        fps={30}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundColor: \"transparent\",\r\n        }}\r\n        autoPlay\r\n        controls\r\n        loop\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:page",
      "target": "app/main.tsx"
    },
    {
      "path": "components/card-flip.tsx",
      "content": "\"use client\";\n\nimport { spring, useCurrentFrame, useVideoConfig } from \"remotion\";\n\ninterface CardFlipProps {\n  frontText?: string;\n  backText?: string;\n  frontTextColor?: string;\n  backTextColor?: string;\n  frontBackgroundColor?: string;\n  backBackgroundColor?: string;\n  fontSize?: string;\n  width?: string;\n  height?: string;\n  borderRadius?: string;\n  borderColor?: string;\n  borderWidth?: string;\n  borderStyle?: \"solid\" | \"dashed\" | \"dotted\";\n  durationInFrames?: number;\n  damping?: number;\n  mass?: number;\n  stiffness?: number;\n  boxShadow?: string;\n}\n\nexport default function CardFlip({\n  frontText = \"Clippk.it\",\n  backText = \"Remotion\",\n  frontTextColor = \"var(--card-foreground)\",\n  backTextColor = \"var(--card-foreground)\",\n  frontBackgroundColor = \"var(--muted)\",\n  backBackgroundColor = \"var(--card)\",\n  fontSize = \"1.25rem\",\n  width = \"200px\",\n  height = \"280px\",\n  borderRadius = \"15px\",\n  borderColor = \"var(--ring)\",\n  borderWidth = \"1px\",\n  borderStyle = \"solid\",\n  durationInFrames = 70,\n  damping = 18,\n  mass = 0.5,\n  stiffness = 100,\n  boxShadow = `0 1px 3px var(--border), 0 6px 12px oklch(from var(--border) calc(l - 0.1) c h / 30%)`,\n}: CardFlipProps) {\n  const frame = useCurrentFrame();\n  const { fps } = useVideoConfig();\n\n  const rotation = spring({\n    frame,\n    fps,\n    from: 0,\n    to: 360,\n    durationInFrames,\n    config: {\n      damping,\n      mass,\n      stiffness,\n    },\n  });\n\n  const commonFaceStyle: React.CSSProperties = {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backfaceVisibility: \"hidden\",\n    borderRadius,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize,\n    fontWeight: \"bold\",\n    padding: \"10px\",\n    boxSizing: \"border-box\",\n    borderWidth,\n    borderStyle,\n  };\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        perspective: \"1200px\",\n        perspectiveOrigin: \"50% 50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      <div\n        style={{\n          width,\n          height,\n          transform: `rotateY(${rotation}deg)`,\n          transformStyle: \"preserve-3d\",\n          position: \"relative\",\n          boxShadow,\n          borderRadius,\n        }}\n      >\n        <div\n          style={{\n            ...commonFaceStyle,\n            background: frontBackgroundColor,\n            color: frontTextColor,\n            borderColor: borderColor,\n          }}\n        >\n          {frontText}\n        </div>\n        <div\n          style={{\n            ...commonFaceStyle,\n            background: backBackgroundColor,\n            color: backTextColor,\n            borderColor: borderColor,\n            transform: \"rotateY(180deg)\",\n          }}\n        >\n          {backText}\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "meta": {
    "iframeHeight": "600px",
    "container": "w-full bg-surface min-h-svh flex px-6 py-12 items-center md:pt-20 justify-center min-w-0 xl:py-24",
    "mobile": "component"
  }
}